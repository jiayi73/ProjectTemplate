apply plugin: 'com.android.application'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        applicationId rootProject.ext.applicationId
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName
        multiDexEnabled true
    }

    compileOptions {
        sourceCompatibility rootProject.ext.javaVersion
    }

    packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
    }

    lintOptions {
        abortOnError rootProject.ext.abortOnLintError
        checkReleaseBuilds rootProject.ext.checkLintRelease
        quiet true
        ignoreWarnings true
        // Some libraries have issues with this
        disable 'InvalidPackage'
        // Lint gives this warning but SDK 20 would be Android L Beta.
        disable 'OldTargetApi'
    }

    buildTypes {
        debug {
            minifyEnabled false
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

//    signingConfigs {
//
//        def Properties localProps = new Properties()
//        localProps.load(new FileInputStream(file('../local.properties')))
//        def Properties keyProps = new Properties()
//
//        // 如果读取不到'keystore.props.file'属性，就使用debug keystore
//
//        if (localProps['keystore.props.file']) {
//            keyProps.load(new FileInputStream(file(localProps['keystore.props.file'])))
//        } else {
//            keyProps["store"] = '../buildsystem/debug.keystore'
//            keyProps["alias"] = 'android'
//            keyProps["storePass"] = 'androiddebugkey'
//            keyProps["pass"] = 'android'
//        }
//
//        debug {
//            storeFile file(keyProps["store"])
//            keyAlias keyProps["alias"]
//            storePassword keyProps["storePass"]
//            keyPassword keyProps["pass"]
//        }
//
//        release {
//            // release版本使用assert确保存在该属性否则报错，避免错误打包
//            assert localProps['keystore.props.file'];
//            storeFile file(keyProps["store"])
//            keyAlias keyProps["alias"]
//            storePassword keyProps["storePass"]
//            keyPassword keyProps["pass"]
//        }
//    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    testCompile 'junit:junit:4.12'
    compile rootProject.ext.libSupportAppcompat
//    apt rootProject.ext.libDaggerCompiler
//    compile rootProject.ext.libDagger
//    compile rootProject.ext.libRxJava
//    compile rootProject.ext.libRxAndroid
//    compile rootProject.ext.libRxBinding
//    compile rootProject.ext.libGlide
//    provided rootProject.ext.libJavaxAnnotation
//    compile rootProject.ext.libSupportDesign
//    compile rootProject.ext.libSupportRecyclerview
//    compile rootProject.ext.libSupportV4
//    debugCompile rootProject.ext.debugDependencies.leakCanary
//    releaseCompile rootProject.ext.releaseDependencies.leakCanary
//    debugCompile rootProject.ext.debugDependencies.blockCanary
//    releaseCompile rootProject.ext.releaseDependencies.blockCanary

}
